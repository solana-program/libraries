name: Main

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  format_and_lint:
    name: Format & Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: [discriminator, pod, program-error, tlv-account-resolution, type-length-value, type-length-value-derive-test]
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          clippy: true
          rustfmt: true

      - name: Format
        run: pnpm ${{ matrix.library }}:format

      - name: Lint
        run: pnpm ${{ matrix.library }}:lint

  audit_rust:
    name: Audit Rust
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-audit

      - name: Install cargo-audit
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-audit

      - name: Run cargo-audit
        run: pnpm rust:audit

  semver_rust:
    name: Check semver Rust
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-semver

      - name: Install cargo-audit
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-semver-checks

      - name: Run semver checks
        run: pnpm rust:semver

  spellcheck_rust:
    name: Spellcheck Rust
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-spellcheck

      - name: Install cargo-spellcheck
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-spellcheck

      - name: Run cargo-spellcheck
        run: pnpm rust:spellcheck

  build_sbf:
    name: Build SBF
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: [discriminator, pod, program-error, tlv-account-resolution, type-length-value, type-length-value-derive-test]
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-build-${{ matrix.library }}
          solana: true

      - name: Build
        run: pnpm ${{ matrix.library }}:build

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        library: [discriminator, pod, program-error, tlv-account-resolution, type-length-value, type-length-value-derive-test]
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          cargo-cache-key: cargo-${{ matrix.library }}-tests
          cargo-cache-fallback-key: cargo-${{ matrix.library }}

      - name: Test
        run: pnpm ${{ matrix.library }}:test
